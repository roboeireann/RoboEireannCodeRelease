// a set of ALL possible formations that can be used - not just the ones used
// in the current game.
// The formations selected for different situations in a game are specified 
// in tactics.cfg, which will reference formations here by their id.
//
// All formation positions are in world (field) coordinates.
// Values should be considered in light of the active field dimensions.

// ===============================================
// WARNING WARNING WARNING
// If you add new formations here, you must add to the FormationId enum
// in Formations.h also
// ===============================================

// The defaults here are a for a full size 2020 field

formations = {
  // -------------------------------------------------------------------------
  // 5 v 5
  // -------------------------------------------------------------------------
  kickoffForward121 = { 
    formationId = kickoffForward121;
    roles = [goalie, centreBack, midL, midR, forward];
    positions = [
      { x = xPosOwnGroundLine; y = 0; }, // 1 goalie middle of goal line
      { x = xPosOwnPenaltyArea; y = -275; },  // 2 defender
      { x = -centerCircleRadius - 200; y = 1100; }, // 3 mid L
      { x = -centerCircleRadius - 1000; y = -900; },  // 4 mid R
      { x = -centerCircleRadius + 200; y = 0; },    // 5 striker
    ];
    yShift = 1000; // the farthest left that formation can shift
    yScale = 0.7; // how much the formation can contract/expand as it moves left/right
    xAnchor = xPosOwnPenaltyMark; // anchor point for shifting and scaling
    xShift = { min = -1000; max = 1000; }; // farthest back and forward the formation center can shift
    xScale = { min = 0.8; max = 1.2; }; // scaling at shift extremes (will always be no scaling at zero shift)
  };

  defendingKickoff121 = {
    formationId = defendingKickoff121;
    roles = [goalie, centreBack, midL, midR, forward];
    positions = [
      { x = xPosOwnGroundLine; y = 0; }, // 1. goalie middle of goal line
      { x = xPosOwnPenaltyArea; y = -220; },  // 2. defender
      { x = xPosOwnPenaltyArea + 700; y = 300; }, // 3. mid L
      { x = -1450; y = -1100; },  // 4. mid R
      { x = -1100; y = 100; },    // 5. striker
    ];
    yShift = 1000; // the farthest left that formation can shift
    yScale = 0.7; // how much the formation can contract/expand as it moves left/right
    xAnchor = xPosOwnPenaltyArea - 500; // anchor point for shifting and scaling
    xShift = { min = -1000; max = 1000; }; // farthest back and forward the formation center can shift
    xScale = { min = 0.8; max = 1.2; }; // scaling at shift extremes (will always be no scaling at zero shift)
  };

  attacking121 = {
    formationId = attacking121;
    roles = [goalie, centreBack, midL, midR, forward];
    positions = [
      { x = xPosOwnGroundLine; y = 0; }, // 1 goalie middle of goal line
      { x = xPosOwnPenaltyArea; y = -275; },  // 2 defender
      { x = -centerCircleRadius - 200; y = 1100; }, // 3 mid L
      { x = -centerCircleRadius - 1000; y = -900; },  // 4 mid R
      { x = -centerCircleRadius + 200; y = 0; },    // 5 striker
    ];
    yShift = 1000; // the farthest left that formation can shift
    yScale = 0.7; // how much the formation can contract/expand as it moves left/right
    xAnchor = xPosOwnPenaltyArea;
    xShift = { min = -1000; max = 1000; }; // farthest back and forward the formation center can shift
    xScale = { min = 0.8; max = 1.2; }; // scaling at shift extremes (will always be no scaling at zero shift)
  };

  defending121 = {
    formationId = defending121;
    roles = [goalie, centreBack, midL, midR, forward];
    positions = [
      { x = xPosOwnGroundLine; y = 0; }, // 1. goalie middle of goal line
      { x = xPosOwnPenaltyArea; y = -220; },  // 2. defender
      { x = xPosOwnPenaltyArea + 700; y = 300; }, // 3. mid L
      { x = -1450; y = -1100; },  // 4. mid R
      { x = -1100; y = 100; },    // 5. striker
    ];
    yShift = 1000; // the farthest left that formation can shift
    yScale = 0.7; // how much the formation can contract/expand as it moves left/right
    xAnchor = xPosOwnPenaltyArea - 500;
    xShift = { min = -1000; max = 1000; }; // farthest back and forward the formation center can shift
    xScale = { min = 0.8; max = 1.2; }; // scaling at shift extremes (will always be no scaling at zero shift)
  };


  // -------------------------------------------------------------------------
  // 7v7 - 2-3-1
  // -------------------------------------------------------------------------

  kickoffForward231 = { 
    formationId = kickoffForward231;
    roles = [goalie, centreBackR, centreBackL, centreMid, midL, midR, forward];
    positions = [
      { x = xPosOwnGroundLine; y = 0; }, // 1 goalie middle of goal line
      { x = xPosOwnPenaltyArea; y = -700; }, // 2 defender R
      { x = xPosOwnPenaltyArea; y = 700; },  // 3 defender L
      { x = -centerCircleRadius - 700; y = -275; },  // 4 CDM
      { x = -centerCircleRadius; y = 1500; }, // 5 winger L
      { x = -centerCircleRadius; y = -1500; },  // 6 winger R
      { x = -centerCircleRadius + 200; y = 0; },    // 7 striker
    ];
    yShift = 1000; // the farthest left that formation can shift
    yScale = 0.7; // how much the formation can contract/expand as it moves left/right
    xAnchor = xPosOwnPenaltyMark; // anchor point for shifting and scaling
    xShift = { min = -1000; max = 1000; }; // farthest back and forward the formation center can shift
    xScale = { min = 0.8; max = 1.0; }; // scaling at shift extremes (will always be no scaling at zero shift)
  };

  defendingKickoff231 = {
    formationId = defendingKickoff231;
    roles = [goalie, centreBackR, centreBackL, centreMid, midL, midR, forward];
    positions = [
      { x = xPosOwnGroundLine; y = 0; }, // 1. goalie middle of goal line
      { x = xPosOwnPenaltyArea - 500; y = -450; }, // 2. defender R
      { x = xPosOwnPenaltyArea - 500; y = 450; },  // 3. defender L
      { x = xPosOwnPenaltyArea + 500; y = -200; },  // 4. CDM
      { x = -centerCircleRadius - 700; y = 1100; }, // 5. winger L
      { x = -centerCircleRadius - 700; y = -1100; },  // 6. winger R
      { x = -centerCircleRadius - 200; y = 100; },    // 7. striker
    ];
    yShift = 600; // the farthest left that formation can shift
    yScale = 0.6; // how much the formation can contract/expand as it moves left/right
    xAnchor = xPosOwnPenaltyArea - 500; // anchor point for shifting and scaling
    xShift = { min = -500; max = 1000; }; // farthest back and forward the formation center can shift
    xScale = { min = 0.7; max = 1.0; }; // scaling at shift extremes (will always be no scaling at zero shift)
  };

  attacking231 = {
    formationId = attacking231;
    roles = [goalie, centreBackR, centreBackL, centreMid, midL, midR, forward];
    positions = [
      { x = xPosOwnGroundLine; y = 0; }, // 1. goalie middle of goal line
      { x = xPosOwnPenaltyArea; y = -700; }, // 2. defender R
      { x = xPosOwnPenaltyArea; y = 700; },  // 3. defender L
      { x = -centerCircleRadius - 400; y = 0; },  // 4. CDM
      { x = 500; y = 1500; }, // 5. winger L
      { x = 500; y = -1500; },  // 6. winger R
      { x = xPosOpponentPenaltyArea - 1000; y = 150; },    // 7. striker
    ];
    yShift = 1000; // the farthest left that formation can shift
    yScale = 0.7; // how much the formation can contract/expand as it moves left/right
    xAnchor = xPosOwnPenaltyArea;
    xShift = { min = -1000; max = 1000; }; // farthest back and forward the formation center can shift
    xScale = { min = 0.8; max = 0.8; }; // scaling at shift extremes (will always be no scaling at zero shift)
  };

  defending231 = {
    formationId = defending231;
    roles = [goalie, centreBackR, centreBackL, centreMid, midL, midR, forward];
    positions = [
      { x = xPosOwnGroundLine; y = 0; }, // 1. goalie middle of goal line
      { x = xPosOwnPenaltyArea - 500; y = -400; }, // 2. defender R
      { x = xPosOwnPenaltyArea - 500; y = 400; },  // 3. defender L
      { x = xPosOwnPenaltyArea + 500; y = -200; },  // 4. CDM
      { x = -centerCircleRadius - 700; y = 1100; }, // 5. winger L
      { x = -centerCircleRadius - 700; y = -1100; },  // 6. winger R
      { x = -centerCircleRadius - 200; y = 100; },    // 7. striker
    ];
    yShift = 600; // the farthest left that formation can shift
    yScale = 0.6; // how much the formation can contract/expand as it moves left/right
    xAnchor = xPosOwnPenaltyArea - 500;
    xShift = { min = -500; max = 1000; }; // farthest back and forward the formation center can shift
    xScale = { min = 0.6; max = 1.0; }; // scaling at shift extremes (will always be no scaling at zero shift)
  };

  // -------------------------------------------------------------------------
  // 7v7 - 2-2-2
  // -------------------------------------------------------------------------

  attacking222 = {
    formationId = attacking222;
    roles = [goalie, centreBackR, centreBackL, midL, midR, forwardL, forwardR];
    positions = [
      { x = xPosOwnGroundLine; y = 0; }, // 1. goalie middle of goal line
      { x = xPosOwnPenaltyArea; y = -700; }, // 2. defender R
      { x = xPosOwnPenaltyArea; y = 700; },  // 3. defender L
      { x = -500; y = -1100; },  // 4. winger R
      { x = -500; y = 1100; }, // 5. winger L
      { x = 500; y = -500; },    // 6. forwardR
      { x = 1000; y = 500; },    // 7. forwardL
    ];
    yShift = 1000; // the farthest left that formation can shift
    yScale = 0.7; // how much the formation can contract/expand as it moves left/right
    xAnchor = xPosOwnPenaltyArea;
    xShift = { min = -1000; max = 1000; }; // farthest back and forward the formation center can shift
    xScale = { min = 0.8; max = 0.8; }; // scaling at shift extremes (will always be no scaling at zero shift)
  };


};
